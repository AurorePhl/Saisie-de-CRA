@model IEnumerable<CRA.Models.TimeSlotViewModel>
@using System.Globalization


@{
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
    ViewData["Title"] = "Schedules";
    CultureInfo cultureFr = new CultureInfo("fr-FR");

    DateTime selectedDate = DateTime.Now;
    if (ViewData["SelectedDate"] != null)
    {
        selectedDate = (DateTime)ViewData["SelectedDate"];
    }

    // Calculer le premier jour de la semaine (lundi) et les jours suivants
    var firstDayOfWeek = selectedDate.AddDays(-(int)selectedDate.DayOfWeek + (int)DayOfWeek.Monday);

    var daysOfWeek = Enumerable.Range(0, 7)
                               .Select(i => firstDayOfWeek.AddDays(i))
                               .ToList();
}
<style>
    /* Conteneur pour chaque jour */
    .day-container {
        position: relative;
        height: 960px; /* Hauteur fixe : 12 heures (7h à 19h) * 60px/heure */
        border: 1px solid #ccc;
    }

    /* Grille horaire */
    .hour-row {
        height: 60px; /* Chaque heure fait 60px */
        border-top: 1px dashed #aaa;
    }

    /* Bloc pour un TimeSlot */
    .time-slot {
        position: absolute;
        left: 5px; /* Décalage depuis le bord gauche */
        right: 5px; /* Décalage depuis le bord droit */
        background-color: #6c757d; /* Couleur de fond */
        color: white; /* Couleur du texte */
        border-radius: 5px;
        padding: 5px;
        font-size: 12px;
        text-align: center;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3);
        display: flex; /* Active Flexbox */
        flex-direction: column; /* Permet d'empiler le texte */
        justify-content: center; /* Centre verticalement */
        align-items: center; /* Centre horizontalement */
        white-space: nowrap;
    }
</style>
<div class="text-center">
    <button onclick="window.print()" class="btn btn-secondary hide-on-print">Imprimer</button>
    <br />
<h1>Emploi du temps</h1>

<!-- Formulaire pour sélectionner une semaine -->
    <form asp-action="Schedules" method="get" class="hide-on-print">
    <div class="form-group">
        <label for="selectedDate">Sélectionner une date pour afficher votre emploi du temps d'une semaine spécifique :</label>
        <input type="datetime-local" id="selectedDate" name="selectedDate" class="form-control" />
    </div>
        <br />
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Afficher</button>
    </div>
</form>

<hr />
    <!-- Tableau pour afficher les assignments par jour -->
    <table class="table">
        <thead>
            <tr>
                    <th></th>
                @foreach (var day in daysOfWeek)
                {
                    <th>@day.ToString("dddd, dd/MM/yyyy", cultureFr).First().ToString().ToUpper()@day.ToString("dddd, dd/MM/yyyy", cultureFr).Substring(1)</th>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                    <td style="width: 50px; text-align: right; vertical-align: top;">
                        @for (int hour = 7; hour <= 23; hour++)
                        {
                            <div class="hour-row">@hour:00</div>
                        }
                    </td>
                @foreach (var day in daysOfWeek)
                {
                    <td style="position: relative;">
                            <div class="day-container">
                                @foreach (var item in Model.Where(t => t.Start.Date == day.Date && t.State == "VALIDATED"))
                        {
                                    var startTime = item.Start.TimeOfDay;
                                    var endTime = item.End.TimeOfDay;
                                    var totalMinutes = (endTime - startTime).TotalMinutes;

                                    var topPosition = (int)((startTime.TotalMinutes - 420) - 1);
                                    var startMinutes = Math.Max(0, (startTime.TotalMinutes - 420)); // Plafond inférieur à 7h
                                    var endMinutes = Math.Min(960, (endTime.TotalMinutes - 420)); // Plafond supérieur à 23h

                                    var height = Math.Max(1, endMinutes - startMinutes);

                                    <div class="time-slot" style="top: @($"{topPosition}px"); height: @($"{height}px");">
                                        @item.AssignmentLibelle
                                        <br />
                                        (@item.Start.ToString("HH:mm") - @item.End.ToString("HH:mm"))
                                    </div>
                        }
                            </div>
                    </td>
                }
            </tr>
        </tbody>
    </table>
</div>