@model IEnumerable<CRA.Models.Assignment>
@using System.Globalization


@{
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
    ViewData["Title"] = "ActivityEntry";
    CultureInfo cultureFr = new CultureInfo("fr-FR");

    DateTime selectedDate = DateTime.Now;
    if (ViewData["SelectedDate"] != null)
    {
        selectedDate = (DateTime)ViewData["SelectedDate"];
    }

    // Calculer le premier jour de la semaine (lundi) et les jours suivants
    var firstDayOfWeek = selectedDate.AddDays(-(int)selectedDate.DayOfWeek + (int)DayOfWeek.Monday);
    var lastDayOfWeek = firstDayOfWeek.AddDays(6);

    var daysOfWeek = Enumerable.Range(0, 7)
                               .Select(i => firstDayOfWeek.AddDays(i))
                               .ToList();

    var option = ViewBag.Option != null ? (List<Guid>)ViewBag.Option : new List<Guid>();

    var timeSlots = (IEnumerable<CRA.Models.TimeSlot>)ViewBag.TimeSlots;

    var timeSlotsDistinct = timeSlots
    .GroupBy(ts => ts.Id) // Assurez-vous que Id est unique pour chaque timeSlot
    .Select(g => g.First())
    .ToList();

    var timeSlotsOfWeek = timeSlots
    .Where(ts => ts.Start.Date >= firstDayOfWeek.Date && ts.End.Date <= lastDayOfWeek.Date)
    .ToList();

}

@if (timeSlotsOfWeek != null && timeSlotsOfWeek.Any(ts => ts.State == "VALIDATED"))
{
    <button onclick="window.print()" class="btn btn-secondary hide-on-print">Imprimer</button>
    <br />
}

<div class="text-center">
    <h1 class="hide-on-print">Saisie d'activité</h1>
    <hr/>
    <p style="font-size:small;text-align:left;">
        Vous pouvez visualiser toutes vos missions de la semaine, avec les créneaux horaires associés à chaque mission, supprimer un ou plusieurs créneaux horaires pour une mission donnée sur une semaine spécifique, sauvegarder votre saisie pour y revenir plus tard et envoyer votre saisie pour validation. Vous pouvez ajouter un nouveau créneau pour une mission spécifique en consultant le détail d'une mission, directement depuis la page dédiée à vos missions.
    </p>
    <hr/>
    <!-- Formulaire pour sélectionner une semaine -->
    <form asp-action="ActivityEntry" method="get" class="hide-on-print">
        <div class="form-group">
            <label for="selectedDate">Sélectionner une date pour afficher votre activité d'une semaine spécifique :</label>
            <input type="datetime-local" id="selectedDate" name="selectedDate" class="form-control" />
        </div>
        <br />
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Afficher</button>
        </div>
    </form>

    <hr />
    <!-- Tableau pour afficher les assignments par jour -->
    <table class="table">
        <thead>
            <tr>
                <th>Libellé</th>
                @foreach (var day in daysOfWeek)
                {
                    <th>@day.ToString("dddd, dd/MM/yyyy", cultureFr).First().ToString().ToUpper()@day.ToString("dddd, dd/MM/yyyy", cultureFr).Substring(1)</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var assignment in Model)
            {
                <tr>
                    <td>
                        @if (timeSlots != null && timeSlots.Any(ts => ts.AssignmentCode == assignment.Code))
                        {
                            <p>@assignment.Libelle</p>
                        }
                   
                    </td>
                    @foreach (var day in daysOfWeek)
                    {
                        <td style="background-color: @(GetColorForTimeSlot(timeSlots, assignment.Code, day))">
                            @foreach (var timeSlot in timeSlots
                           .Where(t => t.Start.Date == day.Date && t.AssignmentCode == assignment.Code)
                           .GroupBy(ts => ts.Id)
                           .Select(g => g.First()))
                            {
                                <p>
                                    @timeSlot.Start.ToString("HH:mm") - @timeSlot.End.ToString("HH:mm")
                                    @if(timeSlot.State != "SENT" && timeSlot.State != "VALIDATED"){   
                                    @using (Html.BeginForm("DeleteTimeSlot2", "HomeEmployee", FormMethod.Post))
                                    {
                                            <button type="submit" class="btn btn-danger hide-on-print" asp-action="DeleteTimeSlot2" asp-route-employeeId="@ViewData["EmployeeId"]" asp-route-code="@assignment.Code" asp-route-timeSlotId="@timeSlot.Id">Supprimer</button>
                                    }
                                    }
                                </p>
                            }
                            
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
@if (timeSlotsOfWeek != null && timeSlotsOfWeek.Any(ts => ts.State != "VALIDATED" && ts.State != "SENT"))
{
    @using (Html.BeginForm("SaveEntry", "HomeEmployee", FormMethod.Post))
    {
        foreach (var timeSlot in timeSlotsOfWeek)
        {
            <input type="hidden" name="timeSlotIds" value="@timeSlot.Id
            " />
        }
        <input type="hidden" name="employeeId" value="@ViewData["EmployeeId"]"  />
            <button type="submit" class="btn btn-primary hide-on-print">Sauvegarder</button>
    }
        <br />
        @using (Html.BeginForm("SendEntry", "HomeEmployee", FormMethod.Post))
        {
            foreach (var timeSlot in timeSlotsOfWeek)
            {
                <input type="hidden" name="timeSlotIds" value="@timeSlot.Id" />
            }
            <input type="hidden" name="employeeId" value="@ViewData["EmployeeId"]" />
            <button type="submit" class="btn btn-warning hide-on-print">Envoyer</button>
        }
}
<hr/>
<div style="font-size:small;text-align:left;">
    <p><strong>Code couleur</strong><p>
        <ul>
            <li>
                Blanc : Nouveau créneau ajouté.
            </li>
            <li>
                Orange : Créneau sauvegardé mais pas encore envoyé.
            </li>
            <li>
                Jaune : Créneau envoyé pour validation.
            </li>
            <li>
                Vert : Créneau validé par l'administrateur.
            </li>
            <li>
                Rouge : Créneau rejeté par l'administrateur.
            </li>
        </ul>
    </div>
</div>

@functions {
    public string GetColorForTimeSlot(IEnumerable<CRA.Models.TimeSlot> timeSlots, Guid assignmentCode, DateTime day)
    {
        var timeSlot = timeSlots.FirstOrDefault(ts => ts.AssignmentCode == assignmentCode && ts.Start.Date == day.Date);
        if (timeSlot == null) return "white"; // Couleur par défaut

        return timeSlot.State switch
        {
            "VALIDATED" => "green",
            "SENT" => "yellow",
            "SAVED" => "orange",
            "ADDED" => "white",
            "REJECTED" => "red",
            _ => "white"
        };
    }
}
